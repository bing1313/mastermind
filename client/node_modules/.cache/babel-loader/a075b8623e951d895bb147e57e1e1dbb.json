{"ast":null,"code":"var _jsxFileName = \"/Users/bingliang/dev/mastermind_game/client/src/components/MastermindGame.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport classes from \"./MastermindGame.module.css\";\nimport InputRow from \"./InputRow\";\nimport DisplayRow from \"./DisplayRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MasterMindGame = () => {\n  _s();\n\n  const [randomNums, setRandomNums] = useState([3, 3, 4, 7]);\n  const [rows, setRows] = useState([]);\n  const [rowsNum, setRowsNum] = useState(0);\n  const [didWin, setDidWin] = useState(false); //   useEffect(() => {\n  //     // //1. retrieve random numbers from api\n  //     fetch(\n  //       \"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\"\n  //     )\n  //       .then((res) => {\n  //         return res.text();\n  //       })\n  //       .then((data) => {\n  //         console.log(data);\n  //         var array = data.split(\"\\n\");\n  //         array.pop();\n  //         array.map((num) => {\n  //           return parseInt(num);\n  //         });\n  //         setRandomNums(array);\n  //       })\n  //       .catch((error) => {\n  //         console.log(error);\n  //       });\n  //   }, []);\n\n  const checkRow = event => {\n    event.preventDefault();\n    console.log(\"event target: \" + event.target[0].value);\n    console.log(typeof event.target[0].value);\n    var rowArray = [];\n\n    for (let i = 0; i < event.target.length; i++) {\n      rowArray.push(event.target[i].value);\n    }\n\n    console.log(\"type\" + typeof rowArray[0]); // var rowArray = [...event.target].map((input) => {\n    //   return input.value\n    // });\n\n    rowArray.pop(); //console.log(rowArray)\n\n    var inputArr = [...rowArray];\n    var randomArr = [...randomNums];\n    var feedback = [];\n    console.log(\"input set\" + inputArr);\n    console.log(\"randomArr\" + randomArr);\n\n    const deleteNumFromSets = num => {\n      console.log(\"delete num \" + num);\n      let a = randomArr.indexOf(num);\n      let b = inputArr.indexOf(num);\n      console.log(\"a\" + a);\n      console.log(\"b\" + b);\n      randomArr.splice(a, 1);\n      inputArr.splice(b, 1);\n    }; //1. check if numbers are correct and aligned\n\n\n    for (let i = 0; i < rowArray.length; i++) {\n      if (inputArr[i] == randomArr[i]) {\n        feedback.push(2);\n        deleteNumFromSets(\"3\");\n      }\n    }\n\n    console.log(\"input set\" + inputArr);\n    console.log(\"randomArr\" + randomArr);\n    console.log(\"feedback after 1: \" + feedback); //2. check if any remaining inputs nums are in the random set\n\n    inputArr.forEach(num => {\n      if (randomArr.includes(num)) {\n        feedback.push(1);\n        deleteNumFromSets(num);\n      }\n    });\n    console.log(\"feedback after 2: \" + feedback);\n\n    for (let i = feedback.length; i < 4; i++) {\n      feedback.push(0);\n    } //check if input is correct\n\n\n    if (feedback.every(num => {\n      return num == 2;\n    })) {\n      setDidWin(true);\n    } //increment row number\n\n\n    setRowsNum(prevCount => {\n      return prevCount + 1;\n    }); //2. Update the grid\n\n    setRows([...rows, {\n      row: rowsNum,\n      nums: rowArray,\n      check: feedback.sort().reverse()\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MasterMind Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.game,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.guessGrid,\n        children: rows.map(row => {\n          console.log(row.nums);\n          return /*#__PURE__*/_jsxDEV(DisplayRow, {\n            values: row.nums,\n            feedback: row.check\n          }, row.row, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputRow, {\n        rowId: \"1\",\n        checkRow: checkRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), didWin && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"you won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MasterMindGame, \"gZWw6Ar0zfXTmZgK6eVi68WB2kQ=\");\n\n_c = MasterMindGame;\nexport default MasterMindGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasterMindGame\");","map":{"version":3,"names":["useState","useEffect","classes","InputRow","DisplayRow","MasterMindGame","randomNums","setRandomNums","rows","setRows","rowsNum","setRowsNum","didWin","setDidWin","checkRow","event","preventDefault","console","log","target","value","rowArray","i","length","push","pop","inputArr","randomArr","feedback","deleteNumFromSets","num","a","indexOf","b","splice","forEach","includes","every","prevCount","row","nums","check","sort","reverse","game","guessGrid","map"],"sources":["/Users/bingliang/dev/mastermind_game/client/src/components/MastermindGame.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport classes from \"./MastermindGame.module.css\";\nimport InputRow from \"./InputRow\";\nimport DisplayRow from \"./DisplayRow\";\n\nconst MasterMindGame = () => {\n  const [randomNums, setRandomNums] = useState([3, 3, 4, 7]);\n  const [rows, setRows] = useState([]);\n  const [rowsNum, setRowsNum] = useState(0);\n  const [didWin, setDidWin] = useState(false);\n\n//   useEffect(() => {\n//     // //1. retrieve random numbers from api\n//     fetch(\n//       \"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\"\n//     )\n//       .then((res) => {\n//         return res.text();\n//       })\n//       .then((data) => {\n//         console.log(data);\n//         var array = data.split(\"\\n\");\n//         array.pop();\n//         array.map((num) => {\n//           return parseInt(num);\n//         });\n//         setRandomNums(array);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   }, []);\n\n  const checkRow = (event) => {\n    event.preventDefault();\n    console.log(\"event target: \" + event.target[0].value)\n    console.log(typeof(event.target[0].value))\n\n    var rowArray = [];\n    for (let i = 0; i < event.target.length; i++) {\n        rowArray.push(event.target[i].value);\n    }\n    console.log(\"type\" + typeof(rowArray[0]));\n    // var rowArray = [...event.target].map((input) => {\n    //   return input.value\n    // });\n    rowArray.pop();\n    //console.log(rowArray)\n    var inputArr = [...rowArray];\n    var randomArr = [...randomNums];\n\n    var feedback = [];\n    console.log(\"input set\" + inputArr);\n    console.log(\"randomArr\" + randomArr);\n\n    const deleteNumFromSets = (num) => {\n        console.log(\"delete num \" + num);\n        let a = randomArr.indexOf(num);\n        let b = inputArr.indexOf(num);\n        console.log(\"a\" + a);\n        console.log(\"b\" + b);\n\n      randomArr.splice(a, 1);\n      inputArr.splice(b, 1);\n    };\n\n    //1. check if numbers are correct and aligned\n    for (let i = 0; i < rowArray.length; i++) {\n      if (inputArr[i] == randomArr[i]) {\n        feedback.push(2);\n        deleteNumFromSets(\"3\");\n      }\n    }\n    console.log(\"input set\" + inputArr);\n    console.log(\"randomArr\" + randomArr);\n    console.log(\"feedback after 1: \" + feedback);\n    //2. check if any remaining inputs nums are in the random set\n    inputArr.forEach((num) => {\n      if (randomArr.includes(num)) {\n        feedback.push(1);\n        deleteNumFromSets(num);\n      }\n    });\n\n    console.log(\"feedback after 2: \" + feedback);\n    for (let i = feedback.length; i < 4; i++) {\n      feedback.push(0);\n    }\n    //check if input is correct\n    if (\n      feedback.every((num) => {\n        return num == 2;\n      })\n    ) {\n      setDidWin(true);\n    }\n    //increment row number\n    setRowsNum((prevCount) => {\n      return prevCount + 1;\n    });\n\n    //2. Update the grid\n    setRows([\n      ...rows,\n      { row: rowsNum, nums: rowArray, check: feedback.sort().reverse() },\n    ]);\n  };\n\n  return (\n    <section>\n      <h2>MasterMind Game</h2>\n      <div className={classes.game}>\n        <div className={classes.guessGrid}>\n          {rows.map((row) => {\n            console.log(row.nums);\n            return (\n              <DisplayRow\n                key={row.row}\n                values={row.nums}\n                feedback={row.check}\n              />\n            );\n          })}\n        </div>\n        <InputRow rowId=\"1\" checkRow={checkRow} />\n        {didWin && <p>you won!</p>}\n      </div>\n    </section>\n  );\n};\n\nexport default MasterMindGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}