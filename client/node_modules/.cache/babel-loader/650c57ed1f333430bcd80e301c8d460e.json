{"ast":null,"code":"var _jsxFileName = \"/Users/bingliang/dev/mastermind_game/client/src/components/MastermindGame.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport classes from \"./MastermindGame.module.css\";\nimport InputRow from \"./InputRow\";\nimport DisplayRow from \"./DisplayRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MasterMindGame = () => {\n  _s();\n\n  const [randomNums, setRandomNums] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [rowsNum, setRowsNum] = useState(0);\n  const [didWin, setDidWin] = useState(false);\n  useEffect(() => {\n    // //1. retrieve random numbers from api\n    fetch(\"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\").then(res => {\n      return res.text();\n    }).then(data => {\n      console.log(data);\n      var array = data.split(\"\\n\");\n      array.pop();\n      array.map(num => {\n        return parseInt(num);\n      });\n      setRandomNums(array);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const checkRow = event => {\n    event.preventDefault();\n    var rowArray = [...event.target].map(input => {\n      return input.value;\n    });\n    rowArray.pop(); //console.log(rowArray)\n\n    var inputSet = new Set(rowArray);\n    var randomSet = new Set(randomNums);\n    var feedback = [];\n    console.log(\"input set\" + inputSet);\n    console.log(\"randomset\" + randomSet);\n\n    const deleteNumFromSets = num => {\n      randomSet.delete(num);\n      inputSet.delete(num);\n    }; //1. check if numbers are correct and aligned\n\n\n    for (let i = 0; i < rowArray.length; i++) {\n      if (rowArray[i] == randomNums[i]) {\n        feedback.push(2);\n        deleteNumFromSets(rowArray[i]);\n      }\n    }\n\n    console.log(\"feedback after 1: \" + feedback); //2. check if any remaining inputs nums are in the random set\n\n    inputSet.forEach(num => {\n      if (randomSet.has(num)) {\n        feedback.push(1);\n        deleteNumFromSets(num);\n      }\n    });\n    console.log(\"feedback after 2: \" + feedback);\n\n    for (let i = feedback.length; i < 4; i++) {\n      feedback.push(0);\n    } //check if input is correct\n\n\n    if (feedback.every(num => {\n      return num == 2;\n    })) {\n      setDidWin(true);\n    } //increment row number\n\n\n    setRowsNum(prevCount => {\n      return prevCount + 1;\n    }); //2. Update the grid\n\n    setRows([...rows, {\n      row: rowsNum,\n      nums: rowArray,\n      check: feedback.sort().reverse()\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.game,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MasterMind Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.guessGrid,\n      children: rows.map(row => {\n        console.log(row.nums);\n        return /*#__PURE__*/_jsxDEV(DisplayRow, {\n          values: row.nums,\n          feedback: row.check\n        }, row.row, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputRow, {\n      rowId: \"1\",\n      checkRow: checkRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), didWin && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"you won!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MasterMindGame, \"lgPCiFZcTtYdihsC9HPxhcSUXbM=\");\n\n_c = MasterMindGame;\nexport default MasterMindGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasterMindGame\");","map":{"version":3,"names":["useState","useEffect","classes","InputRow","DisplayRow","MasterMindGame","randomNums","setRandomNums","rows","setRows","rowsNum","setRowsNum","didWin","setDidWin","fetch","then","res","text","data","console","log","array","split","pop","map","num","parseInt","catch","error","checkRow","event","preventDefault","rowArray","target","input","value","inputSet","Set","randomSet","feedback","deleteNumFromSets","delete","i","length","push","forEach","has","every","prevCount","row","nums","check","sort","reverse","game","guessGrid"],"sources":["/Users/bingliang/dev/mastermind_game/client/src/components/MastermindGame.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport classes from \"./MastermindGame.module.css\";\nimport InputRow from \"./InputRow\";\nimport DisplayRow from \"./DisplayRow\";\n\nconst MasterMindGame = () => {\n  const [randomNums, setRandomNums] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [rowsNum, setRowsNum] = useState(0);\n  const [didWin, setDidWin] = useState(false);\n\n  useEffect(() => {\n    // //1. retrieve random numbers from api\n    fetch(\n      \"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\"\n    )\n      .then((res) => {\n        return res.text();\n      })\n      .then((data) => {\n        console.log(data);\n        var array = data.split(\"\\n\");\n        array.pop();\n        array.map((num) => {\n          return parseInt(num);\n        });\n        setRandomNums(array);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const checkRow = (event) => {\n    event.preventDefault();\n    var rowArray = [...event.target].map((input) => {\n      return input.value;\n    });\n    rowArray.pop();\n    //console.log(rowArray)\n    var inputSet = new Set(rowArray);\n    var randomSet = new Set(randomNums);\n    var feedback = [];\n    console.log(\"input set\" + inputSet);\n    console.log(\"randomset\" + randomSet);\n\n    const deleteNumFromSets = (num) => {\n      randomSet.delete(num);\n      inputSet.delete(num);\n    };\n\n    //1. check if numbers are correct and aligned\n    for (let i = 0; i < rowArray.length; i++) {\n      if (rowArray[i] == randomNums[i]) {\n        feedback.push(2);\n        deleteNumFromSets(rowArray[i]);\n      }\n    }\n    console.log(\"feedback after 1: \" + feedback);\n    //2. check if any remaining inputs nums are in the random set\n    inputSet.forEach((num) => {\n      if (randomSet.has(num)) {\n        feedback.push(1);\n        deleteNumFromSets(num);\n      }\n    });\n\n    console.log(\"feedback after 2: \" + feedback);\n    for (let i = feedback.length; i < 4; i++) {\n      feedback.push(0);\n    }\n    //check if input is correct\n    if (\n      feedback.every((num) => {\n        return num == 2;\n      })\n    ) {\n      setDidWin(true);\n    }\n    //increment row number\n    setRowsNum((prevCount) => {\n      return prevCount + 1;\n    });\n\n    //2. Update the grid\n    setRows([\n      ...rows,\n      { row: rowsNum, nums: rowArray, check: feedback.sort().reverse() },\n    ]);\n  };\n\n  return (\n    <section className={classes.game}>\n        <h2>MasterMind Game</h2>\n      <div className={classes.guessGrid}>\n        {rows.map((row) => {\n          console.log(row.nums);\n          return (\n            <DisplayRow key={row.row} values={row.nums} feedback={row.check} />\n          );\n        })}\n      </div>\n      <InputRow rowId=\"1\" checkRow={checkRow} />\n      {didWin && <p>you won!</p>}\n    </section>\n  );\n};\n\nexport default MasterMindGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}