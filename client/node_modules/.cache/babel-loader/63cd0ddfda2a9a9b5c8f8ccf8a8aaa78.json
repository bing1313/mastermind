{"ast":null,"code":"var _jsxFileName = \"/Users/bingliang/dev/mastermind_game/client/src/components/MastermindGame.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MasterMindInputRow from \"./MasterMindRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MasterMindGame = () => {\n  _s();\n\n  const [randomNums, setRandomNums] = useState([]);\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    // //1. retrieve random numbers from api\n    fetch(\"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\").then(res => {\n      return res.text();\n    }).then(data => {\n      console.log(data);\n      var array = data.split(\"\\n\");\n      array.pop();\n      array.map(num => {\n        return parseInt(num);\n      });\n      setRandomNums(array);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const checkRow = event => {\n    event.preventDefault();\n    let rowArray = [...event.target].map(input => {\n      return input.value;\n    });\n    console.log(\"row\" + rowArray.length);\n    console.log(\"rowArray\" + rowArray);\n    var numSet = new Set(randomNums);\n    var feedback = [];\n\n    for (let i = 0; i < rowArray.length; i++) {\n      if (rowArray[i] == randomNums[i]) {\n        feedback.push(2);\n      } else if (numSet.has(rowArray[i])) {\n        feedback.push(1);\n        numSet.delete(rowArray[i]);\n      } else {\n        feedback.push(0);\n      }\n    }\n\n    console.log(\"feedback\" + feedback); //1. Update the grid\n\n    setRows([...rows, {\n      nums: rowArray,\n      check: feedback.sort().reverse()\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(MasterMindInputRow, {\n      rowId: \"1\",\n      checkRow: checkRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MasterMindGame, \"zdrMft8z38WG/j03nYJFirkCiIU=\");\n\n_c = MasterMindGame;\nexport default MasterMindGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasterMindGame\");","map":{"version":3,"names":["useState","useEffect","MasterMindInputRow","MasterMindGame","randomNums","setRandomNums","rows","setRows","fetch","then","res","text","data","console","log","array","split","pop","map","num","parseInt","catch","error","checkRow","event","preventDefault","rowArray","target","input","value","length","numSet","Set","feedback","i","push","has","delete","nums","check","sort","reverse"],"sources":["/Users/bingliang/dev/mastermind_game/client/src/components/MastermindGame.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport MasterMindInputRow from \"./MasterMindRow\";\n\nconst MasterMindGame = () => {\n    const [randomNums, setRandomNums] = useState([]);\n    const [rows, setRows] = useState([]);\n\n    useEffect(() => {\n        // //1. retrieve random numbers from api\n        fetch(\"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\")\n        .then((res) => {\n            return res.text()\n        })\n        .then((data) => {\n            console.log(data);\n            var array = data.split(\"\\n\")\n            array.pop()\n            array.map((num) => {\n                return parseInt(num)\n            })\n            setRandomNums(array);\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }, [])\n\n    const checkRow = (event) => {\n        event.preventDefault();\n        let rowArray = [...event.target].map((input) => { return input.value });\n        console.log(\"row\" + rowArray.length)\n        console.log(\"rowArray\" + rowArray);\n        var numSet = new Set(randomNums);\n        var feedback = [];\n        for (let i = 0; i < rowArray.length; i++) {\n            if (rowArray[i] == randomNums[i]) {\n                feedback.push(2)\n            } else if (numSet.has(rowArray[i])) {\n                feedback.push(1)\n                numSet.delete(rowArray[i])\n            } else {\n                feedback.push(0)\n            }\n        }\n        console.log(\"feedback\" + feedback)\n        //1. Update the grid\n        setRows([...rows, { nums: rowArray, check: feedback.sort().reverse()}])\n    }\n\n    return <section>\n        <MasterMindInputRow rowId=\"1\" checkRow={checkRow} />\n        {/* {rows.map((row) => {\n            return \n\n            \n        })} */}\n        </section>\n    \n}\n\nexport default MasterMindGame; "],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,iBAA/B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACZ;IACAO,KAAK,CAAC,uFAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAAS;MACX,OAAOA,GAAG,CAACC,IAAJ,EAAP;IACH,CAHD,EAICF,IAJD,CAIOG,IAAD,IAAU;MACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACA,IAAIG,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,IAAX,CAAZ;MACAD,KAAK,CAACE,GAAN;MACAF,KAAK,CAACG,GAAN,CAAWC,GAAD,IAAS;QACf,OAAOC,QAAQ,CAACD,GAAD,CAAf;MACH,CAFD;MAGAd,aAAa,CAACU,KAAD,CAAb;IACH,CAZD,EAaCM,KAbD,CAaOC,KAAK,IAAI;MACZT,OAAO,CAACC,GAAR,CAAYQ,KAAZ;IACH,CAfD;EAgBH,CAlBQ,EAkBN,EAlBM,CAAT;;EAoBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;IACxBA,KAAK,CAACC,cAAN;IACA,IAAIC,QAAQ,GAAG,CAAC,GAAGF,KAAK,CAACG,MAAV,EAAkBT,GAAlB,CAAuBU,KAAD,IAAW;MAAE,OAAOA,KAAK,CAACC,KAAb;IAAoB,CAAvD,CAAf;IACAhB,OAAO,CAACC,GAAR,CAAY,QAAQY,QAAQ,CAACI,MAA7B;IACAjB,OAAO,CAACC,GAAR,CAAY,aAAaY,QAAzB;IACA,IAAIK,MAAM,GAAG,IAAIC,GAAJ,CAAQ5B,UAAR,CAAb;IACA,IAAI6B,QAAQ,GAAG,EAAf;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACI,MAA7B,EAAqCI,CAAC,EAAtC,EAA0C;MACtC,IAAIR,QAAQ,CAACQ,CAAD,CAAR,IAAe9B,UAAU,CAAC8B,CAAD,CAA7B,EAAkC;QAC9BD,QAAQ,CAACE,IAAT,CAAc,CAAd;MACH,CAFD,MAEO,IAAIJ,MAAM,CAACK,GAAP,CAAWV,QAAQ,CAACQ,CAAD,CAAnB,CAAJ,EAA6B;QAChCD,QAAQ,CAACE,IAAT,CAAc,CAAd;QACAJ,MAAM,CAACM,MAAP,CAAcX,QAAQ,CAACQ,CAAD,CAAtB;MACH,CAHM,MAGA;QACHD,QAAQ,CAACE,IAAT,CAAc,CAAd;MACH;IACJ;;IACDtB,OAAO,CAACC,GAAR,CAAY,aAAamB,QAAzB,EAjBwB,CAkBxB;;IACA1B,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;MAAEgC,IAAI,EAAEZ,QAAR;MAAkBa,KAAK,EAAEN,QAAQ,CAACO,IAAT,GAAgBC,OAAhB;IAAzB,CAAV,CAAD,CAAP;EACH,CApBD;;EAsBA,oBAAO;IAAA,uBACH,QAAC,kBAAD;MAAoB,KAAK,EAAC,GAA1B;MAA8B,QAAQ,EAAElB;IAAxC;MAAA;MAAA;MAAA;IAAA;EADG;IAAA;IAAA;IAAA;EAAA,QAAP;AASH,CAvDD;;GAAMpB,c;;KAAAA,c;AAyDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}